<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>CIscanner V2.0.0 上线！</title>
      <link href="/2024/03/10/CIscanner-V2-0-0-%E4%B8%8A%E7%BA%BF%EF%BC%81/"/>
      <content type="html"><![CDATA[<p>菜猫我回来了！省流版：代码优化，加了线程且线程可控<br><br />工具链接  <a href="https://github.com/hxiicle/CIscanner">CIscanner</a></p><span id="more"></span><h3 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h3><p>该工具仅用于安全自查检测<br>由于传播、利用此工具所提供的信息而造成的任何直接或者间接的后果及损失，均由使用者本人负责，作者不为此承担任何责任。<br>本人拥有对此工具的修改和解释权。未经网络安全部门及相关部门允许，不得善自使用本工具进行任何攻击活动，不得以任何方式将其用于商业目的。</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li>工具利用<code>Java11</code>编写，其他版本暂未测试支不支持</li><li>使用需要开启BurpSuite的被动扫描</li><li>会修改并发送URL参数和请求体参数内的所有参数，请求体目前只支持<code>application/x-www-form-urlencoded</code>的数据类型</li><li>工具有两个版本，whitelist版本以及target版本<ul><li>targetlist版本，仅扫描写入targetlist内的目标（建议使用这个版本，因为获取dnslog需要不断访问dnslog网站，如果网站被访问次数过多，会无法及时响应）<br><br /><img src="/img/images/CIscanner2/targetlist.jpg" alt="targetlist"></li><li>whitelist版本，过滤白名单内的目标<br><br /><img src="/img/images/CIscanner2/whitelist.jpg" alt="whitelist"></li></ul></li><li>重中之重！工具外观及部分代码借鉴了<a href="https://github.com/f0ng/log4j2burpscanner">f0ng老师的log4j2burpscanner</a>以及<a href="https://github.com/pmiaowu/BurpShiroPassiveScan">P喵呜老师的BurpShiroPassiveScan</a>，感谢！</li></ul><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p>会修改并发送URL参数和请求体参数内的所有参数，请求体目前只支持<code>application/x-www-form-urlencoded</code>的数据类型<br><br /><del>目前只支持单线程，所以扫描比较慢，后续一定会改进（今日画大饼完成！</del><br><br />支持多线程，且线程可控</p><h3 id="使用截图"><a href="#使用截图" class="headerlink" title="使用截图"></a>使用截图</h3><p>每次打开Burp需要选中Start，插件才会启动，线程默认是4，且仅支持填入1-10内的整数<br><br /><img src="/img/images/CIscanner2/1.jpg" alt="设置页面"><br><br />工具会在Burp目录下生成文件<code>CIScanner.properties</code>，用于记录配置信息<br><br /><img src="/img/images/CIscanner2/2.jpg" alt="CIScanner.properties"><br><br />工具会记录下每次改动的数据包，有漏洞的会标记<code>Danger</code><br><br /><img src="/img/images/CIscanner2/3.jpg" alt="使用截图"><br><br />发现了漏洞也会在<code>Extensions</code>显示<br><br /><img src="/img/images/CIscanner2/4.jpg" alt="发现漏洞"><br><br />Payload格式: aaa{DNSSERVER}，如果没有{DNSSERVER}，则默认直接追加至Payload后<br><br /><img src="/img/images/CIscanner2/5.jpg" alt="Payload格式"></p><h3 id="后续功能"><a href="#后续功能" class="headerlink" title="后续功能"></a>后续功能</h3><ul><li>Accept 白名单增加</li></ul>]]></content>
      
      
        <tags>
            
            <tag> 工具开发 </tag>
            
            <tag> BurpSuite </tag>
            
            <tag> CIscanner </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Github 上传项目</title>
      <link href="/2024/01/01/Github-%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE/"/>
      <content type="html"><![CDATA[<p>学习记录</p><span id="more"></span><h3 id="创建新项目"><a href="#创建新项目" class="headerlink" title="创建新项目"></a>创建新项目</h3><p><img src="/img/images/git%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE/1.jpg" alt="创建新项目"></p><p>在想要上传的文件夹内打开终端</p><h3 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">git <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><h3 id="将要提交的文件暂存到本地仓库"><a href="#将要提交的文件暂存到本地仓库" class="headerlink" title="将要提交的文件暂存到本地仓库"></a>将要提交的文件暂存到本地仓库</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">git <span class="hljs-built_in">add</span> .<br></code></pre></td></tr></table></figure><h3 id="创建一个新的提交并添加提交消息"><a href="#创建一个新的提交并添加提交消息" class="headerlink" title="创建一个新的提交并添加提交消息"></a>创建一个新的提交并添加提交消息</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">git</span> commit -m <span class="hljs-string">&quot;first commit&quot;</span><br></code></pre></td></tr></table></figure><h3 id="重命名当前分支"><a href="#重命名当前分支" class="headerlink" title="重命名当前分支"></a>重命名当前分支</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">git branch -M <span class="hljs-selector-tag">main</span><br></code></pre></td></tr></table></figure><h3 id="将本地-Git-仓库与远程仓库建立关联"><a href="#将本地-Git-仓库与远程仓库建立关联" class="headerlink" title="将本地 Git 仓库与远程仓库建立关联"></a>将本地 Git 仓库与远程仓库建立关联</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git remote add origin https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/用户名/</span>项目名.git<br></code></pre></td></tr></table></figure><h3 id="将本地分支的提交推送到远程仓库"><a href="#将本地分支的提交推送到远程仓库" class="headerlink" title="将本地分支的提交推送到远程仓库"></a>将本地分支的提交推送到远程仓库</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git <span class="hljs-built_in">push</span> -u <span class="hljs-built_in">origin</span> main<br></code></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CIscanner：一个关于命令注入的BurpSuite插件</title>
      <link href="/2023/09/03/CIscanner%EF%BC%9A%E4%B8%80%E4%B8%AA%E5%85%B3%E4%BA%8E%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84BurpSuite%E6%8F%92%E4%BB%B6/"/>
      <content type="html"><![CDATA[<p>工具目前还是处于需要更新的状态，不过基础功能已经完备，就是扫描可能会有点慢（90度鞠躬道歉。<br><br />目前会暂停更新，不过我会回来的！（敝帚自珍，一只菜猫的自知。<br><br />工具链接  <a href="https://github.com/hxiicle/CIscanner">CIscanner</a></p><span id="more"></span><h3 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h3><p>该工具仅用于安全自查检测<br>由于传播、利用此工具所提供的信息而造成的任何直接或者间接的后果及损失，均由使用者本人负责，作者不为此承担任何责任。<br>本人拥有对此工具的修改和解释权。未经网络安全部门及相关部门允许，不得善自使用本工具进行任何攻击活动，不得以任何方式将其用于商业目的。</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li>工具利用<code>Java11</code>编写，其他版本暂未测试支不支持</li><li>使用需要开启BurpSuite的被动扫描</li><li>重中之重！工具外观及部分代码借鉴了<a href="https://github.com/f0ng/log4j2burpscanner">f0ng老师的log4j2burpscanner</a>以及<a href="https://github.com/pmiaowu/BurpShiroPassiveScan">P喵呜老师的BurpShiroPassiveScan</a>，感谢！</li></ul><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p>会修改并发送URL参数和请求体参数内的所有参数，请求体目前只支持<code>application/x-www-form-urlencoded</code>的数据类型，目前只支持单线程，所以扫描比较慢，后续一定会改进（今日画大饼完成！</p><h3 id="使用截图"><a href="#使用截图" class="headerlink" title="使用截图"></a>使用截图</h3><p>每次打开Burp需要选中Open，插件才会启动<br><img src="/img/images/CIscanner/1.jpg" alt="设置页面"><br><br />工具会在Burp目录下生成两个文件<code>CIScanner.properties</code>和<code>CIScanner_SubDomain.txt</code><br><br /><code>CIScanner.properties</code>：用于记录配置信息<br><br /><code>CIScanner_SubDomain.txt</code>：用于存储未在DnsLog检测到的域名，用于查漏补缺，满9条就会删除前5条（这也是扫描慢的主要原因）<br><img src="/img/images/CIscanner/3.jpg" alt="CIScanner_SubDomain.txt"><br><br />工具会记录下每次改动的数据包，有漏洞的会标记<code>Danger</code>，<br><strong>ps：有一个Bug，只有拖动表格（下图红色指向的位置），表格里的数据才会在页面显示，菜猫我啊真的有点搞不来，如果有大神看到，求指点，提前感谢！</strong><br><img src="/img/images/CIscanner/2.jpg" alt="使用截图"><br><br />发现了漏洞也会在<code>Extensions</code>显示<br><img src="/img/images/CIscanner/4.jpg" alt="发现漏洞"></p><h3 id="后续功能"><a href="#后续功能" class="headerlink" title="后续功能"></a>后续功能</h3><ul><li>多线程</li><li>表格数据的显示问题</li><li>黑名单功能</li></ul>]]></content>
      
      
        <tags>
            
            <tag> 工具开发 </tag>
            
            <tag> BurpSuite </tag>
            
            <tag> CIscanner </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Github 个人博客搭建指南</title>
      <link href="/2023/09/03/Github-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/"/>
      <content type="html"><![CDATA[<p>最开始以为搭博客很简单，没想到用了几天时间。避坑建议：多看官方说明</p><span id="more"></span><h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><ol><li>需要安装git，hexo，gh（GitHub CLI），Node.js，mac上最好提前安装brew，再利用brew安装比较简单</li><li>注册一个 Github 账号，新建一个项目名为“用户名.github.io”</li><li>在 Github 设置Token：<code>Setting --&gt; Developer settings --&gt; Personal access tokens --&gt; Tokens (classic) --&gt; Generate new token</code></li></ol><h3 id="账号设置"><a href="#账号设置" class="headerlink" title="账号设置"></a>账号设置</h3><h4 id="为计算机上的每个存储库设置-Git-用户名"><a href="#为计算机上的每个存储库设置-Git-用户名" class="headerlink" title="为计算机上的每个存储库设置 Git 用户名"></a>为计算机上的每个存储库设置 Git 用户名</h4><p>邮箱建议使用 Github 提供的邮箱 <code>*@users.noreply.github.com</code> ，可以在 Setting –&gt; Emails 处看到，隐匿真实邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;用户名&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;邮箱&quot;</span><br></code></pre></td></tr></table></figure><h4 id="查看设置的用户名"><a href="#查看设置的用户名" class="headerlink" title="查看设置的用户名"></a>查看设置的用户名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name<br></code></pre></td></tr></table></figure><h4 id="删除设置的用户名"><a href="#删除设置的用户名" class="headerlink" title="删除设置的用户名"></a>删除设置的用户名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global --<span class="hljs-built_in">unset</span> user.name <span class="hljs-string">&quot;用户名&quot;</span><br></code></pre></td></tr></table></figure><h3 id="缓存凭据"><a href="#缓存凭据" class="headerlink" title="缓存凭据"></a>缓存凭据</h3><p>方便后续远程上传，不用每次输入token</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gh auth login<br></code></pre></td></tr></table></figure><p>依次选 <code>Github.com --&gt; 输入y --&gt; HTTPS --&gt; 输入y --&gt; Paste an authentication token --&gt; 把上面设置的Token粘贴</code>，缓存就搞好啦</p><h3 id="Hexo-搭建博客"><a href="#Hexo-搭建博客" class="headerlink" title="Hexo 搭建博客"></a>Hexo 搭建博客</h3><h4 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init &lt;folder&gt;<br><span class="hljs-built_in">cd</span> &lt;folder&gt;<br>npm install<br></code></pre></td></tr></table></figure><h4 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h4><p><code>https://hexo.io/themes/</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> 到/themes<br></code></pre></td></tr></table></figure><p>根据需要修改博客根目录下的<code>_config.yml</code>以及所选主题下的<code>_config.yml</code>，具体内容可以参考主题介绍，下面说一些常用操作</p><h4 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;文章标题&quot;</span><br></code></pre></td></tr></table></figure><h4 id="新建目录及目录下的-index-md"><a href="#新建目录及目录下的-index-md" class="headerlink" title="新建目录及目录下的 index.md"></a>新建目录及目录下的 index.md</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page 目录名<br></code></pre></td></tr></table></figure><h4 id="Front-matter-的常用参数及格式"><a href="#Front-matter-的常用参数及格式" class="headerlink" title="Front-matter 的常用参数及格式"></a>Front-matter 的常用参数及格式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">---<br>title: Hello World<br><span class="hljs-built_in">date</span>: 2013/7/13 20:46:25<br><span class="hljs-comment"># 分类</span><br>categories:<br>- Diary<br><span class="hljs-comment"># 标签</span><br>tags:<br>- PS3<br>- Games<br>---<br></code></pre></td></tr></table></figure><h4 id="首页摘要"><a href="#首页摘要" class="headerlink" title="首页摘要"></a>首页摘要</h4><p>使用<code>&lt;!-- more --&gt;</code>分割摘要和内容</p><h4 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br></code></pre></td></tr></table></figure><h4 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h4><p>在本地查看博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure><p>注：在某些情况（尤其是更换主题后），对站点的更改不生效，运行该命令清除缓存文件 (db.json) 和已生成的静态文件 (public)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br></code></pre></td></tr></table></figure><h3 id="上传部署"><a href="#上传部署" class="headerlink" title="上传部署"></a>上传部署</h3><h4 id="修改根目录下的-config-yml"><a href="#修改根目录下的-config-yml" class="headerlink" title="修改根目录下的 _config.yml"></a>修改根目录下的 _config.yml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repository: https://github.com/用户名/用户名.github.io.git<br>  branch: main<br></code></pre></td></tr></table></figure><h4 id="安装-hexo-deployer-git-模块"><a href="#安装-hexo-deployer-git-模块" class="headerlink" title="安装 hexo-deployer-git 模块"></a>安装 hexo-deployer-git 模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h4 id="上传至-Github"><a href="#上传至-Github" class="headerlink" title="上传至 Github"></a>上传至 Github</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure><p>等一两分钟，访问<code>https://用户名.github.io</code>，看成果！</p>]]></content>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
